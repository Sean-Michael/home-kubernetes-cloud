---
- name: Create DBaaS and database namespaces
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Namespace
      metadata:
        name: "{{ item }}"
  loop:
    - "{{ dbaas_namespace }}"
    - "databases"

- name: Create backend storage PVC
  k8s:
    state: present
    definition:
      apiVersion: v1
      kind: PersistentVolumeClaim
      metadata:
        name: dbaas-backend-data
        namespace: "{{ dbaas_namespace }}"
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi

- name: Deploy RBAC
  k8s:
    state: present
    definition: "{{ item }}"
  loop: "{{ lookup('template', 'rbac.yaml.j2').split('---') | map('trim') | reject('equalto', '') | map('from_yaml') | list }}"

- name: Deploy backend deployment
  k8s:
    state: present
    definition: "{{ lookup('template', 'backend-deployment.yaml.j2') | from_yaml }}"
  vars:
    backend_replicas: 2
    backend_image: "localhost:5000/dbaas-backend:latest"
    backend_resources:
      requests:
        memory: "256Mi"
        cpu: "200m"
      limits:
        memory: "512Mi"
        cpu: "400m"

- name: Deploy backend service
  k8s:
    state: present
    definition: "{{ lookup('template', 'backend-service.yaml.j2') | from_yaml }}"

- name: Deploy frontend deployment
  k8s:
    state: present
    definition: "{{ lookup('template', 'frontend-deployment.yaml.j2') | from_yaml }}"
  vars:
    frontend_replicas: 1
    frontend_image: "localhost:5000/dbaas-frontend:latest"
    frontend_resources:
      requests:
        memory: "128Mi"
        cpu: "100m"
      limits:
        memory: "256Mi"
        cpu: "200m"
    api_url: "http://dbaas-backend.dbaas-system.svc.cluster.local"

- name: Deploy frontend service
  k8s:
    state: present
    definition: "{{ lookup('template', 'frontend-service.yaml.j2') | from_yaml }}"

- name: Deploy ingress
  k8s:
    state: present
    definition: "{{ lookup('template', 'ingress.yaml.j2') | from_yaml }}"

- name: Wait for backend to be ready
  k8s_info:
    kind: Deployment
    name: dbaas-backend
    namespace: "{{ dbaas_namespace }}"
  register: backend_deployment
  until: backend_deployment.resources[0].status.readyReplicas is defined and backend_deployment.resources[0].status.readyReplicas == backend_deployment.resources[0].status.replicas
  retries: 10
  delay: 30

- name: Wait for frontend to be ready
  k8s_info:
    kind: Deployment
    name: dbaas-frontend
    namespace: "{{ dbaas_namespace }}"
  register: frontend_deployment
  until: frontend_deployment.resources[0].status.readyReplicas is defined and frontend_deployment.resources[0].status.readyReplicas == frontend_deployment.resources[0].status.replicas
  retries: 10
  delay: 30